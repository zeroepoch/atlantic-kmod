From 3a01ee5f80233feb9bce2a39526a59e8f2d9f6d5 Mon Sep 17 00:00:00 2001
From: Eric Work <work.eric@gmail.com>
Date: Sat, 14 Jun 2025 18:48:08 -0700
Subject: [PATCH] net: atlantic: add set_power to fw_ops for atl2 to fix wol

An Aquantia AQC113(C) when using ATL2FW doesn't properly prepare the NIC
for enabling wake-on-lan. The FW operation `set_power` was only
implemented for `hw_atl` and not `hw_atl2`. Here we implement the
`set_power` functionality for `hw_atl2`.

This has been tested with both an AQC113 and an AQC113C device. With
these changes you can now shutdown the system and wake from S5 using
magic packets. Previously the NIC was powered off when entering S5.
Previously if the NIC was configured for WOL by the Windows driver,
loading the atlantic driver would again disable WOL.

This commit cherry-picks partial changes from commit,
https://github.com/Aquantia/AQtion/commit/37bd5ccd73ad4baff488c1d728eb8a819a7eef1f

Attributing the original authors from Marvell for the referenced commit.

Signed-off-by: Eric Work <work.eric@gmail.com>
Co-authored-by: Igor Russkikh <irusskikh@marvell.com>
Co-authored-by: Mark Starovoitov <mstarovoitov@marvell.com>
Co-authored-by: Dmitry Bogdanov <dbogdanov@marvell.com>
Co-authored-by: Pavel Belous <pbelous@marvell.com>
Co-authored-by: Nikita Danilov <ndanilov@marvell.com>
---
 .../net/ethernet/aquantia/atlantic/aq_hw.h    |  2 +
 .../atlantic/hw_atl2/hw_atl2_utils_fw.c       | 39 +++++++++++++++++++
 2 files changed, 41 insertions(+)

diff --git a/drivers/net/ethernet/aquantia/atlantic/aq_hw.h b/drivers/net/ethernet/aquantia/atlantic/aq_hw.h
index 42c0efc1b45581..4e66fd9b2ab1dc 100644
--- a/drivers/net/ethernet/aquantia/atlantic/aq_hw.h
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_hw.h
@@ -113,6 +113,8 @@ struct aq_stats_s {
 #define AQ_HW_POWER_STATE_D0   0U
 #define AQ_HW_POWER_STATE_D3   3U
 
+#define	AQ_FW_WAKE_ON_LINK_RTPM BIT(10)
+
 #define AQ_HW_FLAG_STARTED     0x00000004U
 #define AQ_HW_FLAG_STOPPING    0x00000008U
 #define AQ_HW_FLAG_RESETTING   0x00000010U
diff --git a/drivers/net/ethernet/aquantia/atlantic/hw_atl2/hw_atl2_utils_fw.c b/drivers/net/ethernet/aquantia/atlantic/hw_atl2/hw_atl2_utils_fw.c
index 52e2070a4a2f0c..6a2dbb65201572 100644
--- a/drivers/net/ethernet/aquantia/atlantic/hw_atl2/hw_atl2_utils_fw.c
+++ b/drivers/net/ethernet/aquantia/atlantic/hw_atl2/hw_atl2_utils_fw.c
@@ -462,6 +462,44 @@ static int aq_a2_fw_get_mac_temp(struct aq_hw_s *self, int *temp)
 	return aq_a2_fw_get_phy_temp(self, temp);
 }
 
+static int aq_a2_fw_set_wol_params(struct aq_hw_s *self, const u8 *mac, u32 wol)
+{
+	struct link_control_s link_control;
+	struct mac_address_aligned_s mac_address;
+	struct wake_on_lan_s wake_on_lan;
+
+	memcpy(mac_address.aligned.mac_address, mac, ETH_ALEN);
+	hw_atl2_shared_buffer_write(self, mac_address, mac_address);
+
+	memset(&wake_on_lan, 0, sizeof(wake_on_lan));
+
+	if (wol & WAKE_MAGIC)
+		wake_on_lan.wake_on_magic_packet = 1U;
+
+	if (wol & (WAKE_PHY | AQ_FW_WAKE_ON_LINK_RTPM))
+		wake_on_lan.wake_on_link_up = 1U;
+
+	hw_atl2_shared_buffer_write(self, sleep_proxy, wake_on_lan);
+
+	hw_atl2_shared_buffer_get(self, link_control, link_control);
+	link_control.mode = AQ_HOST_MODE_SLEEP_PROXY;
+	hw_atl2_shared_buffer_write(self, link_control, link_control);
+
+	return hw_atl2_shared_buffer_finish_ack(self);
+}
+
+static int aq_a2_fw_set_power(struct aq_hw_s *self, unsigned int power_state,
+			      const u8 *mac)
+{
+	int err = 0;
+	u32 wol = self->aq_nic_cfg->wol;
+
+	if (wol)
+		err = aq_a2_fw_set_wol_params(self, mac, wol);
+
+	return err;
+}
+
 static int aq_a2_fw_set_eee_rate(struct aq_hw_s *self, u32 speed)
 {
 	struct link_options_s link_options;
@@ -605,6 +643,7 @@ const struct aq_fw_ops aq_a2_fw_ops = {
 	.set_state          = aq_a2_fw_set_state,
 	.update_link_status = aq_a2_fw_update_link_status,
 	.update_stats       = aq_a2_fw_update_stats,
+	.set_power          = aq_a2_fw_set_power,
 	.get_mac_temp       = aq_a2_fw_get_mac_temp,
 	.get_phy_temp       = aq_a2_fw_get_phy_temp,
 	.set_eee_rate       = aq_a2_fw_set_eee_rate,
